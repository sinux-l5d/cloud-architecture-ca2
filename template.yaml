AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Ticket System for Studentbox Project

Parameters:
  # The email address to send emails from
  Email:
    Type: String
    Description: "The email address to send emails from"

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  # Step Function State Machine for handling the ticket lifecycle
  TicketWorkflow:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: statemachine/tickets_workflow.asl.json
      DefinitionSubstitutions:
        SendEmailsFunctionArn: !GetAtt SendEmailsFunction.Arn
        DDBPutItem: !Sub arn:${AWS::Partition}:states:::dynamodb:putItem
        DDBTable: !Ref TicketTable
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref TicketTable
        - LambdaInvokePolicy:
            FunctionName: !Ref SendEmailsFunction

  LexBotRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lexv2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: LexRuntimeRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt FormatFunction.Arn
                # @TODO: clean?
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
  
  # Amazon Lex Bot
  LexBot:
    DependsOn: LexBotRole
    Type: AWS::Lex::Bot
    Properties:
      Name: "StudentboxTicketBot"
      DataPrivacy:
        ChildDirected: false
      IdleSessionTTLInSeconds: 300
      RoleArn: !GetAtt LexBotRole.Arn
      AutoBuildBotLocales: true
      BotLocales:
        - LocaleId: "en_GB"
          NluConfidenceThreshold: 0.40
          SlotTypes:
            - Name: "IssueSubject"
              Description: "The subject of the issue"
              ValueSelectionSetting:
                ResolutionStrategy: ORIGINAL_VALUE
              SlotTypeValues:
                - SampleValue:
                    Value: "login"
                - SampleValue:
                    Value: "install"
                - SampleValue:
                    Value: "runtime"
                - SampleValue:
                    Value: "upload"
                - SampleValue:
                    Value: "other"
            - Name: "IssueType"
              Description: "The type of the issue"
              ValueSelectionSetting:
                ResolutionStrategy: ORIGINAL_VALUE
              SlotTypeValues:
                - SampleValue:
                    Value: "bug"
                - SampleValue:
                    Value: "issue"
                - SampleValue:
                    Value: "feature request"
          Intents:
            - Name: "SubmitIssue"
              FulfillmentCodeHook:
                Enabled: true
              SampleUtterances:
                - Utterance: "I want to submit an issue"
                - Utterance: "I want to submit a ticket"
                - Utterance: "I want to submit a bug"
                - Utterance: "I'd like to submit an issue"
                - Utterance: "I'd like to submit a ticket"
                - Utterance: "I'd like to submit a bug"
              SlotPriorities:
                - Priority: 1
                  SlotName: "FirstName"
                - Priority: 1
                  SlotName: "LastName"
                - Priority: 3
                  SlotName: "Email"
                - Priority: 2
                  SlotName: "Subject"
                - Priority: 2
                  SlotName: "Type"
              IntentConfirmationSetting:
                PromptSpecification:
                  MaxRetries: 3
                  MessageGroupsList:
                    - Message:
                        PlainTextMessage:
                          Value: "Just to be sure {FirstName}, you want to submit a {Type} about {Subject} and be update on {Email}?"
                DeclinationResponse:
                  MessageGroupsList:
                    - Message:
                        PlainTextMessage:
                          Value: "No problem, it's cancelled."
              Slots:
                - Name: "FirstName"
                  SlotTypeName: "AMAZON.FirstName"
                  ValueElicitationSetting:
                    SlotConstraint: "Required"
                    PromptSpecification:
                      MaxRetries: 3
                      MessageGroupsList:
                        - Message:
                            PlainTextMessage:
                              Value: "What is your first name?"
                - Name: "LastName"
                  SlotTypeName: "AMAZON.LastName"
                  ValueElicitationSetting:
                    SlotConstraint: "Required"
                    PromptSpecification:
                      MaxRetries: 3
                      MessageGroupsList:
                        - Message:
                            PlainTextMessage:
                              Value: "What is your last name?" 
                - Name: "Email"
                  SlotTypeName: "AMAZON.EmailAddress"
                  ValueElicitationSetting:
                    SlotConstraint: "Required"
                    PromptSpecification:
                      MaxRetries: 3
                      MessageGroupsList:
                        - Message:
                            PlainTextMessage:
                              Value: "What is your email address?"
                - Name: "Type"
                  SlotTypeName: "IssueType"
                  ValueElicitationSetting:
                    SlotConstraint: "Required"
                    PromptSpecification:
                      MaxRetries: 3
                      MessageGroupsList:
                        - Message:
                            PlainTextMessage:
                              Value: "What is the type of your issue? (bug, issue, feature request)"
                - Name: "Subject"
                  SlotTypeName: "IssueSubject"
                  ValueElicitationSetting:
                    SlotConstraint: "Required"
                    PromptSpecification:
                      MaxRetries: 3
                      MessageGroupsList:
                        - Message:
                            PlainTextMessage:
                              Value: "What is the subject of your issue? (login, install, runtime, upload, other)"
            - Name: "FallbackIntent"
              Description: "Fallback Intent"
              ParentIntentSignature: "AMAZON.FallbackIntent"
  
  LexBotVersionWithCFN:
    DependsOn: LexBot
    Type: AWS::Lex::BotVersion
    Properties:
      BotId: !Ref LexBot
      BotVersionLocaleSpecification:
        - LocaleId: "en_GB"
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
  
  BotFirstAliasWithCFN:
    DependsOn: LexBotVersionWithCFN
    Type: AWS::Lex::BotAlias
    Properties:
      BotId: !Ref LexBot
      BotVersion: !GetAtt LexBotVersionWithCFN.BotVersion
      BotAliasName: "StudentboxTicketBot"
      SentimentAnalysisSettings:
        DetectSentiment: false
      BotAliasLocaleSettings:
        - LocaleId: "en_GB"
          BotAliasLocaleSetting:
            Enabled: true
            CodeHookSpecification:
              LambdaCodeHook:
                LambdaArn: !GetAtt FormatFunction.Arn
                CodeHookInterfaceVersion: "1.0"
          
      

  # Lambda Function for handling ticket creation and updates
  FormatFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/format/
      Handler: app.lambda_handler
      Runtime: python3.10
      Policies:
        - AWSStepFunctionsFullAccess # Allows Lambda to start and interact with Step Function executions
      Environment:
        Variables:
          STEP_FUNCTION_ARN: !GetAtt TicketWorkflow.Arn
  
  LambdaPermissionForLex:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref FormatFunction
      Action: lambda:InvokeFunction
      Principal: lexv2.amazonaws.com
      SourceArn: !GetAtt BotFirstAliasWithCFN.Arn


  # @TODO: clean?
  # Wasn't created automatically
  FormatFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${FormatFunction}
      RetentionInDays: 3
  
  # Lambda Function for sending emails
  SendEmailsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/send_emails/
      Handler: app.lambda_handler
      Runtime: python3.10
      Policies:
        - AWSStepFunctionsFullAccess # Allows Lambda to start and interact with Step Function executions
        - AmazonSESFullAccess # Allows Lambda to send emails using SES
      Environment:
        Variables:
          SES_EMAIL: !Ref Email

  # @TODO: clean?
  # Wasn't created automatically
  SendEmailsFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${SendEmailsFunction}
      RetentionInDays: 3
  
  # DynamoDB Table for storing ticket data
  TicketTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  
Outputs:
  LexBot:
    Description: "Amazon Lex Bot for handling ticket creation and updates"
    Value: !Ref LexBot
  
  LexBotAlias:
    Description: "Amazon Lex Bot Alias for handling ticket creation and updates"
    Value: !Ref BotFirstAliasWithCFN
  
  FormatFunction:
    Description: "Lambda Function for handling ticket creation and updates"
    Value: !Ref FormatFunction
  
  SendEmailsFunction:
    Description: "Lambda Function for sending emails"
    Value: !Ref SendEmailsFunction

  TicketWorkflow:
    Description: "Step Function State Machine for handling the ticket lifecycle"
    Value: !Ref TicketWorkflow

  TicketTable:
    Description: "DynamoDB Table for storing ticket data"
    Value: !Ref TicketTable
  
